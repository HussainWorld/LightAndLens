@model List<LightAndLens.WebApp.Models.RentalTransactionViewModel>
@{
    ViewData["Title"] = "Rental Transactions";
}

<h2>Rental Transactions</h2>

<form method="get" class="row g-3 mb-4" id="filterForm">
    <!-- Status Filter -->
    <div class="col-md-3">
        <label>Status</label>
        <select id="status" name="status" class="form-select">
            <option value="">All</option>
            <option value="Ongoing">Ongoing</option>
            <option value="Overdue">Overdue</option>
        </select>
    </div>

    <!-- Start Date -->
    <div class="col-md-3">
        <label>Start Date From</label>
        <input id="startDate" type="date" name="startDate" class="form-control" />
    </div>

    <!-- End Date -->
    <div class="col-md-3">
        <label>End Date To</label>
        <input id="endDate" type="date" name="endDate" class="form-control" />
    </div>

    @* <!-- Filter Button -->
    <div class="col-md-2 d-flex align-items-end">
        <button type="submit" class="btn btn-primary w-100">Filter</button>
    </div> *@

    <!-- Clear Filters -->
    <div class="col-md-1 d-flex align-items-end">
        <a href="@Url.Action("Index", "RentalTransactions")" class="btn btn-secondary w-100">Clear</a>
    </div>
</form>

<div class="mb-3">
    <input type="text" id="searchBox" class="form-control" placeholder="Search equipment or customer..." />
</div>

<table class="table table-bordered table-striped">
    <thead class="table-light">
        <tr>
            <th>ID</th>
            <th>Equipment</th>
            <th>Customer</th>
            <th>Start</th>
            <th>End</th>
            <th>Fee ($)</th>
            <th>Deposit ($)</th>
            <th class="text-center">Status</th>
            @if (User.IsInRole("Admin") || User.IsInRole("Staff")){
            <th class="text-center">Actions</th>
            }
            <th class="text-center">Submit for Return</th>
        </tr>
    </thead>
    <tbody id="transactions-table-body">
        @await Html.PartialAsync("_RentalTransactionPartial", Model)
    </tbody>
</table>

@section Scripts {
    <script>
        const statusFilter = document.getElementById('status');
        const startDate = document.getElementById('startDate');
        const endDate = document.getElementById('endDate');
        const searchBox = document.getElementById('searchBox');

        function fetchFilteredTransactions() {
            const status = statusFilter.value;
            const start = startDate.value;
            const end = endDate.value;
            const search = searchBox.value;

            const url = `/RentalTransactions/Search?status=${encodeURIComponent(status)}&startDate=${start}&endDate=${end}&search=${encodeURIComponent(search)}`;

            fetch(url)
                .then(response => response.text())
                .then(html => {
                    document.getElementById('transactions-table-body').innerHTML = html;
                })
                .catch(error => console.error('Live filter error:', error));
        }

        // Live search on typing
        searchBox.addEventListener('keyup', fetchFilteredTransactions);

        // Instant filtering on dropdowns/date changes
        statusFilter.addEventListener('change', fetchFilteredTransactions);
        startDate.addEventListener('change', fetchFilteredTransactions);
        endDate.addEventListener('change', fetchFilteredTransactions);
    </script>
}

